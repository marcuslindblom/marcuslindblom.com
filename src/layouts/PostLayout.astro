---
const { heading, text, publishedDate } = Astro.props;

const currentPath = Astro.url.pathname;

const dateOptions: object = {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
};

const formatDate = (date: string): string => {
  const d = new Date(date);
  return d.toLocaleDateString('en-US', dateOptions);
};

const formatDateTime = (date: string): string => {
  const d = new Date(date);
  const year = d.getFullYear();
  const month = String(d.getMonth() + 1).padStart(2, '0');
  const day = String(d.getDate()).padStart(2, '0');
  const hours = String(d.getHours()).padStart(2, '0');
  const minutes = String(d.getMinutes()).padStart(2, '0');
  const seconds = String(d.getSeconds()).padStart(2, '0');

  return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;
};

const mentions = async () => {
  return await fetch(`https://webmention.io/api/mentions.jf2?target=${Astro.url.href}`)
    .then(response => response.json())
    .then(data => {
      return data.children.reduce((acc, entry) => {
        const wmProperty = entry['wm-property'];
        acc.set(wmProperty, [...(acc.get(wmProperty) || []), entry]);
        return acc;
      }, new Map());
    })
}
---

<main>
  <div class="mx-auto max-w-7xl px-8 py-12 lg:pt-24">
    <div class="mx-auto max-w-xl">
      <article class="text-sm font-light flex h-entry">

        <div class="flex-shrink-0 w-12">
          <img
            class="h-8 w-8 rounded-full border border-white/10 u-photo"
            src="/images/avatar.jpg"
            alt="image"
          />
        </div>

        <div class="flex-auto">
          <a
            rel="author"
            class="text-black dark:text-white h-card p-author"
            href="https://marcuslindblom.com/">Marcus Lindblom</a
          >
          <span class="text-neutral-500 dark:text-neutral-400"> Â· </span>

          <time
            class="text-neutral-500 dark:text-neutral-400 dt-published"
            datetime={formatDateTime(publishedDate)}
            >{formatDate(publishedDate)}</time
          >

          <h1 class="text-black dark:text-white p-name">
            <a href={currentPath} class="u-url">
              {heading}
            </a>
          </h1>

          <div
            class="text-neutral-500 dark:text-neutral-400 space-y-3 mt-3 prose prose-sm e-content"
            set:html={text}
          />

        </div>

        <a rel="syndication noreferrer" class="u-syndication" href="https://brid.gy/publish/mastodon"></a>
      </article>

        {
          mentions().then(result => {
            const likes = result.get('like-of') || [];
            const reposts = result.get('repost-of') || [];
            const comments = result.get('in-reply-to') || [];
            const count = likes.length + reposts.length + comments.length;
            const link = likes[0]?.url || reposts[0]?.url || comments[0]?.url;
            return count > 0 ? (
            <section class="text-neutral-500 dark:text-neutral-400 mt-8 ms-12">
              <h2 class="text-sm mb-3 flex gap-2 items-center">Join the conversation
                <a href={link}>
                  <svg viewBox="0 0 16 16" width="16" height="16"><path fill="#828282" d="M 15.659 9.592 C 15.424 10.72 13.553 11.956 11.404 12.195 C 10.283 12.32 9.18 12.434 8.003 12.384 C 6.079 12.302 4.56 11.956 4.56 11.956 C 4.56 12.13 4.572 12.297 4.595 12.452 C 4.845 14.224 6.478 14.33 8.025 14.379 C 9.586 14.429 10.976 14.02 10.976 14.02 L 11.04 15.337 C 11.04 15.337 9.948 15.884 8.003 15.984 C 6.93 16.039 5.598 15.959 4.047 15.576 C 0.683 14.746 0.104 11.4 0.015 8.006 C -0.012 6.998 0.005 6.048 0.005 5.253 C 0.005 1.782 2.443 0.765 2.443 0.765 C 3.672 0.238 5.782 0.017 7.975 0 L 8.029 0 C 10.221 0.017 12.332 0.238 13.561 0.765 C 13.561 0.765 15.999 1.782 15.999 5.253 C 15.999 5.253 16.03 7.814 15.659 9.592 Z M 13.124 5.522 L 13.124 9.725 L 11.339 9.725 L 11.339 5.646 C 11.339 4.786 10.951 4.35 10.175 4.35 C 9.317 4.35 8.887 4.867 8.887 5.891 L 8.887 8.124 L 7.113 8.124 L 7.113 5.891 C 7.113 4.867 6.683 4.35 5.825 4.35 C 5.049 4.35 4.661 4.786 4.661 5.646 L 4.661 9.725 L 2.876 9.725 L 2.876 5.522 C 2.876 4.663 3.111 3.981 3.582 3.476 C 4.067 2.971 4.703 2.712 5.493 2.712 C 6.406 2.712 7.098 3.039 7.555 3.695 L 8 4.39 L 8.445 3.695 C 8.902 3.039 9.594 2.712 10.507 2.712 C 11.297 2.712 11.933 2.971 12.418 3.476 C 12.889 3.981 13.124 4.663 13.124 5.522 Z" style="stroke:none;stroke-miterlimit:10;fill-rule:evenodd;"/></svg>
                </a>
              </h2>
              <h3 class="text-xs mb-1">{likes?.length} Likes</h3>
              <ul class="flex flex-wrap list-none pe-24 gap-3 mb-4">
                {
                  likes?.map(like => {
                    return (
                      <li class="p-0 ease-in-out duration-200 hover:-translate-y-1.5 -me-6">
                        <a href={like.author.url}>
                          <img src={like.author.photo} alt={like.author.name} loading="lazy" decoding="async" width="24" height="24" class="rounded-full border border-white/10 u-photo aspect-square" />
                        </a>
                      </li>
                    )
                  })
                }
              </ul>

              <h3 class="text-xs mb-1">{reposts?.length} Reposts</h3>
              <ul class="flex flex-wrap list-none pe-24 gap-3 mb-4">
                {
                  reposts?.map(repost => {
                    return (
                      <li class="p-0 ease-in-out duration-200 hover:-translate-y-1.5 -me-6">
                        <a href={repost.author.url}>
                          <img src={repost.author.photo} alt={repost.author.name} loading="lazy" decoding="async" width="24" height="24" class="rounded-full border border-white/10 u-photo aspect-square" />
                        </a>
                      </li>
                    )
                  })
                }
              </ul>

              <h3 class="text-xs mb-1">{comments?.length} Comments</h3>
              <ul class="flex flex-wrap list-none pe-24 gap-3 mb-4">
                {
                  comments?.map(comment => {
                    return (
                      <li class="p-0 ease-in-out duration-200 hover:-translate-y-1.5 -me-6">
                        <a href={comment.author.url} class="m-0 p-0">
                          <img src={comment.author.photo} alt={comment.author.name} loading="lazy" decoding="async" width="24" height="24" class="rounded-full border border-white/10 u-photo aspect-square" />
                        </a>
                      </li>
                    )
                  })
                }
              </ul>
            </section>
          ) : null
          })
        }
    </div>
  </div>
</main>
